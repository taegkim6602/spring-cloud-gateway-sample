services:
  auth-service:
    image: spring-auth-service
    container_name: auth
    ports:
      - "8081:8081"
      - "6379:6379"
      - "5432:5432"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/authdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
    volumes:
      - ./redis.conf:/etc/redis/redis.conf
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  gateway-service-1:
    image: spring-cloud-gateway-basic
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
      - SPRING_APPLICATION_NAME=gateway-service-1
      - SPRING_REDIS_HOST=auth-service
      - LOGGING_FILE_NAME=/var/log/spring-cloud-gateway.log
      - 'LOGGING_PATTERN_CONSOLE={"timestamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}","level":"%p","message":"%m","logger":"%c","spring.application.name":"$${spring.application.name}"}%n'
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - gateway1_logs:/var/log
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - auth-service
      - prometheus
      - loki
      - grafana

  gateway-service-2:
    image: spring-cloud-gateway-basic
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8082
      - SPRING_APPLICATION_NAME=gateway-service-2
      - SPRING_REDIS_HOST=auth-service
      - LOGGING_FILE_NAME=/var/log/spring-cloud-gateway.log
      - 'LOGGING_PATTERN_CONSOLE={"timestamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}","level":"%p","message":"%m","logger":"%c","spring.application.name":"$${spring.application.name}"}%n'
    dns:
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      - gateway2_logs:/var/log
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - auth-service
      - prometheus
      - loki
      - grafana

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
    depends_on:
      - gateway-service-1
      - gateway-service-2

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    networks:
      - app-network
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/local-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --tries=1 -O- http://localhost:3100/ready"]
      interval: 10s
      timeout: 3s
      retries: 3

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - app-network

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml
      - gateway1_logs:/var/log/gateway1:ro
      - gateway2_logs:/var/log/gateway2:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - app-network
    depends_on:
      loki:
        condition: service_healthy

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  loki_data:
  gateway1_logs:
  gateway2_logs:

networks:
  app-network:
    driver: bridge
