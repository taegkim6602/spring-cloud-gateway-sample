spring:
  application:
    name: ${SPRING_APPLICATION_NAME:gateway-service}
  cloud:
    gateway:
      metrics:
        enabled: true
        tags:
          instance-id: ${SPRING_APPLICATION_NAME:gateway-service}

server:
  port: ${SERVER_PORT:8080}











# docker-compose.yml
version: '3.8'
services:
  gateway-service-1:
    build: ./gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8080
      - SPRING_APPLICATION_NAME=gateway-service-1
    volumes:
      - ./logs/gateway1:/var/log
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  gateway-service-2:
    build: ./gateway
    ports:
      - "8082:8082"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8082
      - SPRING_APPLICATION_NAME=gateway-service-2
    volumes:
      - ./logs/gateway2:/var/log
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
    depends_on:
      - gateway-service-1
      - gateway-service-2

  auth-service:
    build: ./auth
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    volumes:
      - ./logs/auth:/var/log
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # ... other services remain the same ...

---
# prometheus/prometheus.yml
global:
  scrape_interval: 5s
  evaluation_interval: 5s

scrape_configs:
  - job_name: 'gateway-services'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['host.docker.internal:8080', 'host.docker.internal:8082']
        labels:
          application: 'gateway-service'

  - job_name: 'auth-service'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: ['host.docker.internal:8081']
        labels:
          application: 'auth-service'

---
# nginx/nginx.conf
events {
    worker_connections 1024;
}

http {
    upstream gateway_backends {
        server gateway-service-1:8080;
        server gateway-service-2:8082;
    }

    server {
        listen 80;
        
        location / {
            proxy_pass http://gateway_backends;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}

---
# promtail/config.yml
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: gateway-logs-1
    static_configs:
      - targets:
          - localhost
        labels:
          job: gateway
          app: gateway-service-1
          __path__: /var/log/gateway1/*.log
    pipeline_stages:
      - match:
          selector: '{job="gateway"}'
          stages:
            - regex:
                expression: '(?P<timestamp>\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}\.\d{3})\s+\[(?P<thread>.*?)\]\s+(?P<level>[A-Z]+)\s+(?P<logger>.*?)\s+(?P<message>.*)'
            - labels:
                level:
                thread:
                logger:

  - job_name: gateway-logs-2
    static_configs:
      - targets:
          - localhost
        labels:
          job: gateway
          app: gateway-service-2
          __path__: /var/log/gateway2/*.log
    pipeline_stages:
      - match:
          selector: '{job="gateway"}'
          stages:
            - regex:
                expression: '(?P<timestamp>\d{4}-\d{2}-\d{2}\s\d{2}:\d{2}:\d{2}\.\d{3})\s+\[(?P<thread>.*?)\]\s+(?P<level>[A-Z]+)\s+(?P<logger>.*?)\s+(?P<message>.*)'
            - labels:
                level:
                thread:
                logger:

  # ... other job configurations remain the same ...
